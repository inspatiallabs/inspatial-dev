// Auto-generated Google Font declarations
  // Generated on 2025-04-15T13:54:12.406Z
  
  // @ts-ignore: Allow importing .ts files in Deno
  import type { InSpatialFontProp } from '../types.ts'
  // @ts-ignore: Allow importing .ts files in Deno
  import type { PrimitiveFontTypes } from '../primitive/types.ts'
  
  type Display = 'auto' | 'block' | 'swap' | 'fallback' | 'optional'
  
  /**
   * All available Google Font families
   * Auto-generated from font-map.json
   */
  export type GoogleFontTypes =
    | ;

  
  /**
   * Combined type of all available fonts (Google Fonts and Primitive Fonts)
   */
  export type AllFontVariants = GoogleFontTypes | PrimitiveFontTypes;
  
  /**
   * ╔════════════════════════════════════════════════════════════════════════════╗
   * ║                    Google Fonts Type Declarations                          ║
   * ╠════════════════════════════════════════════════════════════════════════════╣
   * ║                                                                            ║
   * ║  Auto-generated type declarations for Google Fonts.                        ║
   * ║  DO NOT EDIT THIS FILE DIRECTLY - it is automatically generated.           ║
   * ║                                                                            ║
   * ║  To update this file, run the font generator script.                       ║
   * ║                                                                            ║
   * ╚════════════════════════════════════════════════════════════════════════════╝
   */

export declare function ABeeZee(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function ADLaM Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'adlam' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function AR One Sans(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      ARRR?: number // min: 10, max: 60, default: 10
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Abel(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Abhaya Libre(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
    }
  ): InSpatialFontProp
export declare function Aboreto(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Abril Fatface(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Abyssinica SIL(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Aclonica(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Acme(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Actor(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Adamina(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Advent Pro(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 100, max: 200, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Afacad(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Afacad Flux(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      slnt?: number // min: -14, max: 14, default: 0
      wght?: number // min: 100, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Agbalumo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Agdasima(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Aguafina Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Akatab(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | Array<'400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tifinagh'>
      
    }
  ): InSpatialFontProp
export declare function Akaya Kanadaka(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Akaya Telivigala(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Akronim(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Akshar(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Aladin(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Alata(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alatsi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Albert Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Aldrich(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Alef(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Alegreya(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Alegreya SC(
    options: {
      weight: '400' | '500' | '700' | '800' | '900' | Array<'400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alegreya Sans(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alegreya Sans SC(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Aleo(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Alex Brush(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alexandria(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Alfa Slab One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alice(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Alike(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Alike Angular(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Alkalami(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Alkatra(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'devanagari' | 'latin' | 'latin-ext' | 'oriya'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Allan(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Allerta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Allerta Stencil(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Allison(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Allura(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Almarai(
    options: {
      weight: '300' | '400' | '700' | '800' | Array<'300' | '400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Almendra(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Almendra Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Almendra SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Alumni Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Alumni Sans Collegiate One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alumni Sans Inline One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Alumni Sans Pinstripe(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Amarante(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Amaranth(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Amatic SC(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Amethysta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Amiko(
    options: {
      weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Amiri(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Amiri Quran(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Amita(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Anaheim(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Andada Pro(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 840, default: 400
    }
  ): InSpatialFontProp
export declare function Andika(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Anek Bangla(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Devanagari(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Gujarati(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Gurmukhi(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Kannada(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Latin(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Malayalam(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Odia(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'oriya'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Tamil(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Anek Telugu(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Angkor(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Annapurna SIL(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Annie Use Your Telescope(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Anonymous Pro(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Anta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Antic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Antic Didone(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Antic Slab(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Anton(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Anton SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Antonio(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Anuphan(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Anybody(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 50, max: 150, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Aoboshi One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Arapey(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Arbutus(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Arbutus Slab(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Architects Daughter(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Archivo(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Archivo Black(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Archivo Narrow(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Are You Serious(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Aref Ruqaa(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Aref Ruqaa Ink(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Arima(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'malayalam' | 'tamil' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Arimo(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Arizonia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Armata(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Arsenal(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Arsenal SC(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Artifika(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Arvo(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Arya(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Asap(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Asap Condensed(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Asar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Asset(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Assistant(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Astloch(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Asul(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Athiti(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Atkinson Hyperlegible(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Atma(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Atomic Age(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Aubrey(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Audiowide(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Autour One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Average(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Average Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Averia Gruesa Libre(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Averia Libre(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Averia Sans Libre(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Averia Serif Libre(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Azeret Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function B612(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function B612 Mono(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function BIZ UDGothic(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function BIZ UDMincho(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function BIZ UDPGothic(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function BIZ UDPMincho(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Babylonica(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bacasime Antique(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bad Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bagel Fat One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bahiana(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bahianita(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bai Jamjuree(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bakbak One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ballet(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 16, max: 72, default: 16
    }
  ): InSpatialFontProp
export declare function Baloo 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Bhai 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Bhaijaan 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Bhaina 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'oriya' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Chettan 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Da 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Paaji 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Tamma 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Tammudu 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Baloo Thambi 2(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Balsamiq Sans(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Balthazar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bangers(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Barlow(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Barlow Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Barlow Semi Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Barriecito(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Barrio(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Basic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Baskervville(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Baskervville SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Battambang(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Baumans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bayon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Be Vietnam Pro(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Beau Rivage(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bebas Neue(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Beiruti(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Belanosima(
    options: {
      weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Belgrano(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bellefair(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Belleza(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bellota(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bellota Text(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function BenchNine(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Benne(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bentham(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Berkshire Swash(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Besley(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Beth Ellen(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bevan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function BhuTuka Expanded One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Big Shoulders Display(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Big Shoulders Inline Display(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Big Shoulders Inline Text(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Big Shoulders Stencil Display(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Big Shoulders Stencil Text(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Big Shoulders Text(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Bigelow Rules(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bigshot One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bilbo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bilbo Swash Caps(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function BioRhyme(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wdth?: number // min: 100, max: 125, default: 100
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function BioRhyme Expanded(
    options: {
      weight: '200' | '300' | '400' | '700' | '800' | Array<'200' | '300' | '400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Birthstone(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Birthstone Bounce(
    options: {
      weight: '400' | '500' | Array<'400' | '500'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Biryani(
    options: {
      weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bitter(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Black And White Picture(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Black Han Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Black Ops One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Blaka(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Blaka Hollow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Blaka Ink(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Blinker(
    options: {
      weight: '100' | '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bodoni Moda(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      opsz?: number // min: 6, max: 96, default: 11
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Bodoni Moda SC(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      opsz?: number // min: 6, max: 96, default: 11
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Bokor(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bona Nova(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bona Nova SC(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bonbon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bonheur Royale(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Boogaloo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Borel(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bowlby One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bowlby One SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Braah One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Brawler(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Bree Serif(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bricolage Grotesque(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 12, max: 96, default: 14
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Bruno Ace(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bruno Ace SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Brygada 1918(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Bubblegum Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bubbler One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Buda(
    options: {
      weight: '300' | Array<'300'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Buenard(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Bungee(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Hairline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Inline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Outline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Shade(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Spice(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Bungee Tint(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Butcherman(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Butterfly Kids(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cabin(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Cabin Condensed(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cabin Sketch(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cactus Classical Serif(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Caesar Dressing(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cagliostro(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cairo(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      slnt?: number // min: -11, max: 11, default: 0
      wght?: number // min: 200, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Cairo Play(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      slnt?: number // min: -11, max: 11, default: 0
      wght?: number // min: 200, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Caladea(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Calistoga(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Calligraffitti(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cambay(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cambo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Candal(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cantarell(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cantata One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cantora One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Caprasimo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Capriola(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Caramel(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Carattere(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cardo(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Carlito(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Carme(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Carrois Gothic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Carrois Gothic SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Carter One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Castoro(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Castoro Titling(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Catamaran(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Caudex(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Caveat(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Caveat Brush(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cedarville Cursive(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ceviche One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chakra Petch(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Changa(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Changa One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Chango(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Charis SIL(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Charm(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Charmonman(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Chathura(
    options: {
      weight: '100' | '300' | '400' | '700' | '800' | Array<'100' | '300' | '400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Chau Philomene One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chela One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chelsea Market(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chenla(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer'>
      
    }
  ): InSpatialFontProp
export declare function Cherish(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cherry Bomb One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cherry Cream Soda(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cherry Swash(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chewy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Chicle(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Chilanka(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>
      
    }
  ): InSpatialFontProp
export declare function Chivo(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Chivo Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Chocolate Classical Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Chokokutai(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Chonburi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cinzel(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Cinzel Decorative(
    options: {
      weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Clicker Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Climate Crisis(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      YEAR?: number // min: 1979, max: 2050, default: 1979
    }
  ): InSpatialFontProp
export declare function Coda(
    options: {
      weight: '400' | '800' | Array<'400' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Codystar(
    options: {
      weight: '300' | '400' | Array<'300' | '400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Coiny(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Combo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Comfortaa(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Comforter(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Comforter Brush(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Comic Neue(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Coming Soon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Comme(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Commissioner(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      FLAR?: number // min: 0, max: 100, default: 0
      VOLM?: number // min: 0, max: 100, default: 0
      slnt?: number // min: -12, max: 0, default: 0
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Concert One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Condiment(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Content(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer'>
      
    }
  ): InSpatialFontProp
export declare function Contrail One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Convergence(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cookie(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Copse(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Corben(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Corinthia(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cormorant(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Cormorant Garamond(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cormorant Infant(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cormorant SC(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cormorant Unicase(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Cormorant Upright(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Courgette(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Courier Prime(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cousine(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Coustard(
    options: {
      weight: '400' | '900' | Array<'400' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Covered By Your Grace(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Crafty Girls(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Creepster(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Crete Round(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Crimson Pro(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Crimson Text(
    options: {
      weight: '400' | '600' | '700' | Array<'400' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Croissant One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Crushed(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cuprum(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Cute Font(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Cutive(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Cutive Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function DM Mono(
    options: {
      weight: '300' | '400' | '500' | Array<'300' | '400' | '500'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function DM Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      opsz?: number // min: 9, max: 40, default: 14
      wght?: number // min: 100, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function DM Serif Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function DM Serif Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dai Banna SIL(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'new-tai-lue'>
      
    }
  ): InSpatialFontProp
export declare function Damion(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dancing Script(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Danfo(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      ELSH?: number // min: 0, max: 100, default: 0
    }
  ): InSpatialFontProp
export declare function Dangrek(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Darker Grotesque(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Darumadrop One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function David Libre(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Dawning of a New Day(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Days One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Dekko(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dela Gothic One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Delicious Handrawn(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Delius(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Delius Swash Caps(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Delius Unicase(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Della Respira(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Denk One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Devonshire(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dhurjati(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Didact Gothic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Diphylleia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Diplomata(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Diplomata SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Do Hyeon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Dokdo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Domine(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Donegal One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dongle(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Doppio One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Dorsa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Dosis(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function DotGothic16(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Doto(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      ROND?: number // min: 0, max: 100, default: 0
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Dr Sugiyama(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Duru Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function DynaPuff(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Dynalight(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function EB Garamond(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Eagle Lake(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function East Sea Dokdo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Eater(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Economica(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Eczar(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Edu AU VIC WA NT Arrows(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu AU VIC WA NT Dots(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu AU VIC WA NT Guides(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu AU VIC WA NT Hand(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu AU VIC WA NT Pre(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu NSW ACT Foundation(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu QLD Beginner(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu SA Beginner(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu TAS Beginner(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Edu VIC WA NT Beginner(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function El Messiri(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'cyrillic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Electrolize(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Elsie(
    options: {
      weight: '400' | '900' | Array<'400' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Elsie Swash Caps(
    options: {
      weight: '400' | '900' | Array<'400' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Emblema One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Emilys Candy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Encode Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Encode Sans Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Encode Sans Expanded(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Encode Sans SC(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Encode Sans Semi Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Encode Sans Semi Expanded(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Engagement(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Englebert(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Enriqueta(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ephesis(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Epilogue(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Erica One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Esteban(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Estonia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Euphoria Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ewert(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Exo(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Exo 2(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Expletus Sans(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Explora(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cherokee' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Faculty Glyphic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fahkwang(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Familjen Grotesk(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Fanwood Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Farro(
    options: {
      weight: '300' | '400' | '500' | '700' | Array<'300' | '400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Farsan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fascinate(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fascinate Inline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Faster One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fasthand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Fauna One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Faustina(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Federant(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Federo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Felipa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fenix(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Festive(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Figtree(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Finger Paint(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Finlandica(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Fira Code(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Fira Mono(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fira Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fira Sans Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fira Sans Extra Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fjalla One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fjord One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Flamenco(
    options: {
      weight: '300' | '400' | Array<'300' | '400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Flavors(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fleur De Leah(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Flow Block(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Flow Circular(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Flow Rounded(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Foldit(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Fondamento(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fontdiner Swanky(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Forum(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fragment Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Francois One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Frank Ruhl Libre(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Fraunces(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      SOFT?: number // min: 0, max: 100, default: 0
      WONK?: number // min: 0, max: 1, default: 0
      opsz?: number // min: 9, max: 144, default: 14
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Freckle Face(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fredericka the Great(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Fredoka(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Freehand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Freeman(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fresca(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Frijole(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Fruktur(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Fugaz One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Fuggles(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Funnel Display(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Funnel Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Fustat(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Fuzzy Bubbles(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function GFS Didot(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek'>
      
    }
  ): InSpatialFontProp
export declare function GFS Neohellenic(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek'>
      
    }
  ): InSpatialFontProp
export declare function Ga Maamli(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gabarito(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Gabriela(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gaegu(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gafata(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gajraj One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Galada(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Galdeano(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Galindo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gamja Flower(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gantari(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Gasoek One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gayathri(
    options: {
      weight: '100' | '400' | '700' | Array<'100' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'malayalam'>
      
    }
  ): InSpatialFontProp
export declare function Geist(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Geist Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Gelasio(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Gemunu Libre(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Genos(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cherokee' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Gentium Book Plus(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gentium Plus(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Geo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Geologica(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      CRSV?: number // min: 0, max: 1, default: 0
      SHRP?: number // min: 0, max: 100, default: 0
      slnt?: number // min: -12, max: 0, default: 0
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Georama(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 150, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Geostar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Geostar Fill(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Germania One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gideon Roman(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gidugu(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Gilda Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Girassol(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Give You Glory(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Glass Antiqua(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Glegoo(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gloock(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gloria Hallelujah(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Glory(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Gluten(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      slnt?: number // min: -13, max: 13, default: 0
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Goblin One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gochi Hand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Goldman(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Golos Text(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Gorditas(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gothic A1(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gotu(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Goudy Bookletter 1911(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gowun Batang(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gowun Dodum(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Graduate(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Grand Hotel(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Grandiflora One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Grandstander(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Grape Nuts(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Gravitas One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Great Vibes(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Grechen Fuemen(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Grenze(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Grenze Gotisch(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Grey Qo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Griffy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gruppo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gudea(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gugi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gulzar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Gupter(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Gurajada(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Gwendolyn(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Habibi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hachi Maru Pop(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hahmlet(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Halant(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hammersmith One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hanalei(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hanalei Fill(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Handjet(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'armenian' | 'cyrillic' | 'cyrillic-ext' | 'greek' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      ELGR?: number // min: 1, max: 2, default: 1
      ELSH?: number // min: 0, max: 16, default: 2
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Handlee(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Hanken Grotesk(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Hanuman(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Happy Monkey(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Harmattan(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Headland One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hedvig Letters Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Hedvig Letters Serif(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      opsz?: number // min: 12, max: 24, default: 24
    }
  ): InSpatialFontProp
export declare function Heebo(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Henny Penny(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Hepta Slab(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 1, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Herr Von Muellerhoff(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hi Melody(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Hina Mincho(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Hind(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hind Guntur(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Hind Madurai(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Hind Siliguri(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hind Vadodara(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Holtwood One SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Homemade Apple(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Homenaje(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Honk(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      MORF?: number // min: 0, max: 45, default: 15
      SHLN?: number // min: 0, max: 100, default: 50
    }
  ): InSpatialFontProp
export declare function Host Grotesk(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Hubballi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Hubot Sans(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Hurricane(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Arabic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Devanagari(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Hebrew(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans JP(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans KR(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Thai(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'thai'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Sans Thai Looped(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'thai'>
      
    }
  ): InSpatialFontProp
export declare function IBM Plex Serif(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell DW Pica(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell DW Pica SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell Double Pica(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell Double Pica SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell English(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell English SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell French Canon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell French Canon SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell Great Primer(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function IM Fell Great Primer SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ibarra Real Nova(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Iceberg(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Iceland(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Imbue(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 10, max: 100, default: 10
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Imperial Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Imprima(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inclusive Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Inconsolata(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 50, max: 200, default: 100
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Inder(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Indie Flower(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ingrid Darling(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Inika(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inknut Antiqua(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inria Sans(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inria Serif(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inspiration(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Instrument Sans(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Instrument Serif(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Inter(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 14, max: 32, default: 14
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Inter Tight(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Irish Grover(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Island Moments(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Istok Web(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Italiana(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Italianno(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Itim(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Jacquard 12(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Jacquard 12 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Jacquard 24(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jacquard 24 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jacquarda Bastarda 9(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Jacquarda Bastarda 9 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Jacques Francois(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Jacques Francois Shadow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Jaini(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jaini Purva(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jaldi(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jaro(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 6, max: 72, default: 14
    }
  ): InSpatialFontProp
export declare function Jersey 10(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 10 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 15(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 15 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 20(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 20 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 25(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jersey 25 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function JetBrains Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Jim Nightshade(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Joan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jockey One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jolly Lodger(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jomhuria(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jomolhari(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'tibetan'>
      
    }
  ): InSpatialFontProp
export declare function Josefin Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Josefin Slab(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Jost(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Joti One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Jua(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Judson(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Julee(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Julius Sans One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Junge(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Jura(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'kayah-li' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Just Another Hand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Just Me Again Down Here(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function K2D(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kablammo(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      MORF?: number // min: 0, max: 60, default: 0
    }
  ): InSpatialFontProp
export declare function Kadwa(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kaisei Decol(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kaisei HarunoUmi(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kaisei Opti(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kaisei Tokumin(
    options: {
      weight: '400' | '500' | '700' | '800' | Array<'400' | '500' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kalam(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kalnia(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math'>
      
      wdth?: number // min: 100, max: 125, default: 100
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Kalnia Glaze(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wdth?: number // min: 100, max: 125, default: 100
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Kameron(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Kanit(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kantumruy Pro(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Karantina(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Karla(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Karla Tamil Inclined(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Karla Tamil Upright(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Karma(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Katibeh(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kaushan Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kavivanar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Kavoon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kay Pho Du(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kayah-li' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kdam Thmor Pro(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Keania One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kelly Slab(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kenia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Khand(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Khmer(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer'>
      
    }
  ): InSpatialFontProp
export declare function Khula(
    options: {
      weight: '300' | '400' | '600' | '700' | '800' | Array<'300' | '400' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kings(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kirang Haerang(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Kite One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kiwi Maru(
    options: {
      weight: '300' | '400' | '500' | Array<'300' | '400' | '500'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Klee One(
    options: {
      weight: '400' | '600' | Array<'400' | '600'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Knewave(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function KoHo(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kodchasan(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kode Mono(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Koh Santepheap(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Kolker Brush(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Konkhmer Sleokchher(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kosugi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kosugi Maru(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kotta One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Koulen(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Kranky(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Kreon(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Kristi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Krona One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Krub(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Kufam(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Kulim Park(
    options: {
      weight: '200' | '300' | '400' | '600' | '700' | Array<'200' | '300' | '400' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kumar One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kumar One Outline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Kumbh Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      YOPQ?: number // min: 40, max: 300, default: 300
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Kurale(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function LXGW WenKai Mono TC(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'lisu' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function LXGW WenKai TC(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'lisu' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function La Belle Aurore(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Labrada(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lacquer(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Laila(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lakki Reddy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Lalezar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Lancelot(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Langar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lateef(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lato(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lavishly Yours(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function League Gothic(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 100, default: 100
    }
  ): InSpatialFontProp
export declare function League Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function League Spartan(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Leckerli One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ledger(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lekton(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lemon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lemonada(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Deca(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Exa(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Giga(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Mega(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Peta(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Tera(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Lexend Zetta(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Libre Barcode 128(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode 128 Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode 39(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode 39 Extended(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode 39 Extended Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode 39 Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Barcode EAN13 Text(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Libre Baskerville(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Libre Bodoni(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Libre Caslon Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Libre Caslon Text(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Libre Franklin(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Licorice(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Life Savers(
    options: {
      weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lilita One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lily Script One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Limelight(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Linden Hill(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Linefont(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wdth?: number // min: 25, max: 200, default: 100
      wght?: number // min: 4, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Lisu Bosa(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'lisu'>
      
    }
  ): InSpatialFontProp
export declare function Literata(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 7, max: 72, default: 14
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Liu Jian Mao Cao(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Livvic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Lobster(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Lobster Two(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Londrina Outline(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Londrina Shadow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Londrina Sketch(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Londrina Solid(
    options: {
      weight: '100' | '300' | '400' | '900' | Array<'100' | '300' | '400' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Long Cang(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Lora(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Love Light(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Love Ya Like A Sister(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Loved by the King(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lovers Quarrel(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Luckiest Guy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lugrasimo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lumanosimo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Lunasima(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Lusitana(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Lustria(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Luxurious Roman(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Luxurious Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function M PLUS 1(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function M PLUS 1 Code(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function M PLUS 1p(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function M PLUS 2(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function M PLUS Code Latin(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 100, max: 125, default: 100
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function M PLUS Rounded 1c(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Ma Shan Zheng(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Macondo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Macondo Swash Caps(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mada(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Madimi One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Magra(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Maiden Orange(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Maitree(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Major Mono Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mako(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mali(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mallanna(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Maname(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mandali(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Manjari(
    options: {
      weight: '100' | '400' | '700' | Array<'100' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>
      
    }
  ): InSpatialFontProp
export declare function Manrope(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Mansalva(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Manuale(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Marcellus(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Marcellus SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Marck Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Margarine(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Marhey(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Markazi Text(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Marko One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Marmelad(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Martel(
    options: {
      weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Martel Sans(
    options: {
      weight: '200' | '300' | '400' | '600' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Martian Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 112.5, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Marvel(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mate(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mate SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Matemasie(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Maven Pro(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function McLaren(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mea Culpa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Meddon(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function MedievalSharp(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Medula One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Meera Inimai(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Megrim(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Meie Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Meow Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Merienda(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Merriweather(
    options: {
      weight: '300' | '400' | '700' | '900' | Array<'300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Merriweather Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Metal(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Metal Mania(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Metamorphous(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Metrophobic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Michroma(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Micro 5(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Micro 5 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Milonga(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Miltonian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Miltonian Tattoo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mina(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mingzat(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'lepcha'>
      
    }
  ): InSpatialFontProp
export declare function Miniver(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Miriam Libre(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Mirza(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Miss Fajardose(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mitr(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mochiy Pop One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mochiy Pop P One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Modak(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Modern Antiqua(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Moderustic(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Mogra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mohave(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Moirai One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Molengo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Molle(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mona Sans(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Monda(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Monofett(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Monomaniac One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Monoton(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Monsieur La Doulaise(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Montaga(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Montagu Slab(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 16, max: 144, default: 144
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function MonteCarlo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Montez(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Montserrat(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Montserrat Alternates(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Montserrat Subrayada(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Moo Lah Lah(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mooli(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Moon Dance(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Moul(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Moulpali(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mountains of Christmas(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Mouse Memoirs(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mr Bedfort(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mr Dafoe(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mr De Haviland(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mrs Saint Delafield(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mrs Sheppards(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ms Madi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mukta(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mukta Mahee(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mukta Malar(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Mukta Vaani(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Mulish(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Murecho(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function MuseoModerno(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function My Soul(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mynerve(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Mystery Quest(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function NTR(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Nabla(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'vietnamese'>
      
      EDPT?: number // min: 0, max: 200, default: 100
      EHLT?: number // min: 0, max: 24, default: 12
    }
  ): InSpatialFontProp
export declare function Namdhinggo(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'limbu'>
      
    }
  ): InSpatialFontProp
export declare function Nanum Brush Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nanum Gothic(
    options: {
      weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nanum Gothic Coding(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nanum Myeongjo(
    options: {
      weight: '400' | '700' | '800' | Array<'400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nanum Pen Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Narnoor(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gunjala-gondi' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Neonderthaw(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Nerko One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Neucha(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Neuton(
    options: {
      weight: '200' | '300' | '400' | '700' | '800' | Array<'200' | '300' | '400' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function New Amsterdam(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function New Rocker(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function New Tegomin(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function News Cycle(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Newsreader(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 6, max: 72, default: 16
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Niconne(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Niramit(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Nixie One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nobile(
    options: {
      weight: '400' | '500' | '700' | Array<'400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nokora(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Norican(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nosifer(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Notable(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nothing You Could Do(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Noticia Text(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Noto Color Emoji(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'emoji'>
      
    }
  ): InSpatialFontProp
export declare function Noto Emoji(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'emoji'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Kufi Arabic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Music(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'music'>
      
    }
  ): InSpatialFontProp
export declare function Noto Naskh Arabic(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Nastaliq Urdu(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Rashi Hebrew(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'devanagari' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Adlam(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'adlam' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Adlam Unjoined(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'adlam' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Anatolian Hieroglyphs(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'anatolian-hieroglyphs' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Arabic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Armenian(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'armenian' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Avestan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'avestan' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Balinese(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'balinese' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Bamum(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bamum' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Bassa Vah(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bassa-vah' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Batak(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'batak' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Bengali(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Bhaiksuki(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bhaiksuki' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Brahmi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'brahmi' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Buginese(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'buginese' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Buhid(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'buhid' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Canadian Aboriginal(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'canadian-aboriginal' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Carian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'carian' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Caucasian Albanian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'caucasian-albanian' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Chakma(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'chakma' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Cham(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cham' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Cherokee(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cherokee' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Chorasmian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'chorasmian' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Coptic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'coptic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Cuneiform(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cuneiform' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Cypriot(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cypriot' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Cypro Minoan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cypro-minoan' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Deseret(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'deseret' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Devanagari(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Display(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Duployan(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'duployan' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Egyptian Hieroglyphs(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'egyptian-hieroglyphs' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Elbasan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'elbasan' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Elymaic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'elymaic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Ethiopic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Georgian(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'georgian' | 'greek-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Glagolitic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'glagolitic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Gothic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gothic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Grantha(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'grantha' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Gujarati(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Gunjala Gondi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gunjala-gondi' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Gurmukhi(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans HK(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Hanifi Rohingya(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hanifi-rohingya' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Hanunoo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hanunoo' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Hatran(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hatran' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Hebrew(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Imperial Aramaic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'imperial-aramaic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Indic Siyaq Numbers(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'indic-siyaq-numbers' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Inscriptional Pahlavi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'inscriptional-pahlavi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Inscriptional Parthian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'inscriptional-parthian' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans JP(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Javanese(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'javanese' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans KR(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Kaithi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kaithi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Kannada(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Kawi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kawi' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Kayah Li(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kayah-li' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Kharoshthi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kharoshthi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Khmer(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Khojki(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khojki' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Khudawadi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khudawadi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Lao(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'lao' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Lao Looped(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'lao' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Lepcha(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'lepcha'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Limbu(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'limbu'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Linear A(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'linear-a'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Linear B(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'linear-b'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Lisu(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'lisu'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Lycian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'lycian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Lydian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'lydian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Mahajani(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'mahajani'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Malayalam(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Mandaic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'mandaic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Manichaean(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'manichaean'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Marchen(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'marchen'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Masaram Gondi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'masaram-gondi'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Math(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'math'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Mayan Numerals(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'mayan-numerals'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Medefaidrin(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'medefaidrin'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Meetei Mayek(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'meetei-mayek'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Mende Kikakui(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'mende-kikakui'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Meroitic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'meroitic' | 'meroitic-cursive' | 'meroitic-hieroglyphs'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Miao(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'miao'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Modi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'modi'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Mongolian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'mongolian' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Mro(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'mro'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Multani(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'multani'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Myanmar(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'myanmar'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans NKo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nko'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans NKo Unjoined(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nko'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Nabataean(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nabataean'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Nag Mundari(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nag-mundari'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Nandinagari(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nandinagari'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans New Tai Lue(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'new-tai-lue'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Newa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'newa'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Nushu(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nushu'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Ogham(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'ogham'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Ol Chiki(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'ol-chiki'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Hungarian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-hungarian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Italic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-italic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old North Arabian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-north-arabian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Permic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'old-permic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Persian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-persian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Sogdian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-sogdian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old South Arabian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-south-arabian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Old Turkic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-turkic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Oriya(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'oriya'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Osage(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'osage'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Osmanya(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'osmanya'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Pahawh Hmong(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'pahawh-hmong'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Palmyrene(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'palmyrene'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Pau Cin Hau(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'pau-cin-hau'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Phags Pa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'phags-pa'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Phoenician(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'phoenician'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Psalter Pahlavi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'psalter-pahlavi'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Rejang(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'rejang'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Runic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'runic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans SC(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Samaritan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'samaritan'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Saurashtra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'saurashtra'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Sharada(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sharada'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Shavian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'shavian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Siddham(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'siddham'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans SignWriting(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'signwriting'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Sinhala(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Sogdian(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sogdian'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Sora Sompeng(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sora-sompeng'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Soyombo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'soyombo'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Sundanese(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sundanese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Syloti Nagri(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'syloti-nagri'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Symbols(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'symbols'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Symbols 2(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'braille' | 'latin' | 'latin-ext' | 'math' | 'mayan-numerals' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Syriac(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'syriac'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Syriac Eastern(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'syriac'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans TC(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Tagalog(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tagalog'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tagbanwa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tagbanwa'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tai Le(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tai-le'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tai Tham(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tai-tham'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Tai Viet(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tai-viet'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Takri(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'takri'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tamil(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Tamil Supplement(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil-supplement'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tangsa(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tangsa'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Telugu(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Thaana(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thaana'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Thai(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Thai Looped(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tifinagh(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tifinagh'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Tirhuta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tirhuta'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Ugaritic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'ugaritic'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Vai(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vai'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Vithkuqi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vithkuqi'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Sans Wancho(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'wancho'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Warang Citi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'warang-citi'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Yi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'yi'>
      
    }
  ): InSpatialFontProp
export declare function Noto Sans Zanabazar Square(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'zanabazar-square'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Ahom(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'ahom' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Armenian(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'armenian' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Balinese(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'balinese' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Bengali(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Devanagari(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Display(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Dogra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'dogra' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Ethiopic(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'ethiopic' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Georgian(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'georgian' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Grantha(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'grantha' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Gujarati(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Gurmukhi(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif HK(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Hebrew(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif JP(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif KR(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Kannada(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Khitan Small Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khitan-small-script' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Khmer(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Khojki(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khojki' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Lao(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'lao' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Makasar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'makasar'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Malayalam(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'malayalam'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Myanmar(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'myanmar'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif NP Hmong(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'nyiakeng-puachue-hmong'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Old Uyghur(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'old-uyghur'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Oriya(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'oriya'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Ottoman Siyaq(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'ottoman-siyaq-numbers'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif SC(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Sinhala(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif TC(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Tamil(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Tangut(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tangut'>
      
    }
  ): InSpatialFontProp
export declare function Noto Serif Telugu(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Thai(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai'>
      
      wdth?: number // min: 62.5, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Tibetan(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tibetan'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Toto(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'toto'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Vithkuqi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vithkuqi'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Serif Yezidi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'yezidi'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Traditional Nushu(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'nushu'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Noto Znamenny Musical Notation(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'znamenny'>
      
    }
  ): InSpatialFontProp
export declare function Nova Cut(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Flat(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Oval(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Round(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Slim(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Nova Square(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Numans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Nunito(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Nunito Sans(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      YTLC?: number // min: 440, max: 540, default: 500
      opsz?: number // min: 6, max: 12, default: 12
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 200, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Nuosu SIL(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'yi'>
      
    }
  ): InSpatialFontProp
export declare function Odibee Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Odor Mean Chey(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Offside(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Oi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'tamil' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Ojuju(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Old Standard TT(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Oldenburg(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ole(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Oleo Script(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Oleo Script Swash Caps(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Onest(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Oooh Baby(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Open Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Oranienbaum(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Orbit(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Orbitron(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Oregano(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Orelega One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Orienta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Original Surfer(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Oswald(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Outfit(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Over the Rainbow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Overlock(
    options: {
      weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Overlock SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Overpass(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Overpass Mono(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Ovo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Oxanium(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Oxygen(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Oxygen Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Sans(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Sans Caption(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Sans Narrow(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Serif(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function PT Serif Caption(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Pacifico(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Padauk(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'myanmar'>
      
    }
  ): InSpatialFontProp
export declare function Padyakke Expanded One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Palanquin(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Palanquin Dark(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Palette Mosaic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Pangolin(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Paprika(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Parisienne(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Parkinsans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Passero One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Passion One(
    options: {
      weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Passions Conflict(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Pathway Extreme(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 8, max: 144, default: 12
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Pathway Gothic One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Patrick Hand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Patrick Hand SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Pattaya(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Patua One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Pavanam(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Paytone One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Peddana(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Peralta(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Permanent Marker(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Petemoss(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Petit Formal Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Petrona(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Phetsarath(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'lao'>
      
    }
  ): InSpatialFontProp
export declare function Philosopher(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Phudu(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Piazzolla(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 8, max: 30, default: 14
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Piedra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Pinyon Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Pirata One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Pixelify Sans(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Plaster(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Platypi(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Play(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Playball(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Playfair(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 5, max: 1200, default: 14
      wdth?: number // min: 87.5, max: 112.5, default: 100
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Playfair Display(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Playfair Display SC(
    options: {
      weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Playpen Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'emoji' | 'latin' | 'latin-ext' | 'math' | 'vietnamese'>
      
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AR(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AT(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AU NSW(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AU QLD(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AU SA(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AU TAS(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite AU VIC(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite BE VLG(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite BE WAL(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite BR(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite CA(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite CL(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite CO(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite CU(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite CZ(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DE Grund(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DE LA(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DE SAS(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DE VA(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DK Loopet(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite DK Uloopet(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite ES(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite ES Deco(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite FR Moderne(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite FR Trad(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite GB J(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite GB S(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite HR(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite HR Lijeva(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite HU(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite ID(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite IE(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite IN(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite IS(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite IT Moderna(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite IT Trad(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite MX(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite NG Modern(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite NL(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite NO(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite NZ(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite PE(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite PL(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite PT(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite RO(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite SK(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite TZ(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite US Modern(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite US Trad(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite VN(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Playwrite ZA(
    options: {
      weight: '100' | '200' | '300' | '400' | 'variable' | Array<'100' | '200' | '300' | '400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      wght?: number // min: 100, max: 400, default: 400
    }
  ): InSpatialFontProp
export declare function Plus Jakarta Sans(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Podkova(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Poetsen One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Poiret One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Poller One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Poltawski Nowy(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Poly(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Pompiere(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ponnala(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Pontano Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Poor Story(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Poppins(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Port Lligat Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Port Lligat Slab(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Potta One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Pragati Narrow(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Praise(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Prata(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Preahvihear(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Press Start 2P(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Pridi(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | Array<'200' | '300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Princess Sofia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Prociono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Prompt(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Prosto One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Protest Guerrilla(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Protest Revolution(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Protest Riot(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Protest Strike(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Proza Libre(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Public Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Puppies Play(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Puritan(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Purple Purse(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Qahiri(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Quando(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Quantico(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Quattrocento(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Quattrocento Sans(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Questrial(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Quicksand(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Quintessential(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Qwigley(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Qwitcher Grypen(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function REM(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Racing Sans One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Radio Canada(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'canadian-aboriginal' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Radio Canada Big(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Radley(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rajdhani(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rakkas(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Raleway(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Raleway Dots(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ramabhadra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Ramaraja(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Rambla(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rammetto One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rampart One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ranchers(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rancho(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ranga(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rasa(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Rationale(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Ravi Prakash(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Readex Pro(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      HEXP?: number // min: 0, max: 100, default: 0
      wght?: number // min: 160, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Recursive(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      CASL?: number // min: 0, max: 1, default: 0
      CRSV?: number // min: 0, max: 1, default: 0.5
      MONO?: number // min: 0, max: 1, default: 0
      slnt?: number // min: -15, max: 0, default: 0
      wght?: number // min: 300, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Red Hat Display(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Red Hat Mono(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Red Hat Text(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Red Rose(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Redacted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Redacted Script(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Reddit Mono(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Reddit Sans(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Reddit Sans Condensed(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Redressed(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Reem Kufi(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Reem Kufi Fun(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Reem Kufi Ink(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Reenie Beanie(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Reggae One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rethink Sans(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Revalia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rhodium Libre(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ribeye(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ribeye Marrow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Righteous(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Risque(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Road Rage(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Roboto(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Roboto Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Roboto Flex(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      GRAD?: number // min: -200, max: 150, default: 0
      XOPQ?: number // min: 27, max: 175, default: 96
      XTRA?: number // min: 323, max: 603, default: 468
      YOPQ?: number // min: 25, max: 135, default: 79
      YTAS?: number // min: 649, max: 854, default: 750
      YTDE?: number // min: -305, max: -98, default: -203
      YTFI?: number // min: 560, max: 788, default: 738
      YTLC?: number // min: 416, max: 570, default: 514
      YTUC?: number // min: 528, max: 760, default: 712
      opsz?: number // min: 8, max: 144, default: 14
      slnt?: number // min: -10, max: 0, default: 0
      wdth?: number // min: 25, max: 151, default: 100
      wght?: number // min: 100, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Roboto Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Roboto Serif(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      GRAD?: number // min: -50, max: 100, default: 0
      opsz?: number // min: 8, max: 144, default: 14
      wdth?: number // min: 50, max: 150, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Roboto Slab(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Rochester(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Rock 3D(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Rock Salt(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function RocknRoll One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rokkitt(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Romanesco(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ropa Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rosario(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Rosarivo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rouge Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Rowdies(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Rozha One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Rubik 80s Fade(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Beastly(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Broken Fax(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Bubbles(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Burned(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Dirt(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Distressed(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Doodle Shadow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Doodle Triangles(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Gemstones(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Glitch(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Glitch Pop(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Iso(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Lines(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Maps(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Marker Hatch(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Maze(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Microbe(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Mono One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Moonrocks(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Pixels(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Puddles(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Scribble(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Spray Paint(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Storm(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Vinyl(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rubik Wet Paint(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ruda(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Rufina(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ruge Boogie(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Ruluko(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rum Raisin(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ruslan Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Russo One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ruthie(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Ruwudu(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Rye(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function STIX Two Text(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function SUSE(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Sacramento(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sahitya(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sail(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Saira(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 50, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Saira Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Saira Extra Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Saira Semi Condensed(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Saira Stencil One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Salsa(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sanchez(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sancreek(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sankofa Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sansita(
    options: {
      weight: '400' | '700' | '800' | '900' | Array<'400' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sansita Swashed(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Sarabun(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sarala(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sarina(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sarpanch(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | Array<'400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sassy Frass(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Satisfy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sawarabi Gothic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sawarabi Mincho(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Scada(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Scheherazade New(
    options: {
      weight: '400' | '500' | '600' | '700' | Array<'400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Schibsted Grotesk(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Schoolbell(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Scope One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Seaweed Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Secular One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sedan(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sedan SC(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sedgwick Ave(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sedgwick Ave Display(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sen(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Send Flowers(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sevillana(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Seymour One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shadows Into Light(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shadows Into Light Two(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shalimar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Shantell Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      BNCE?: number // min: -100, max: 100, default: 0
      INFM?: number // min: 0, max: 100, default: 0
      SPAC?: number // min: 0, max: 100, default: 0
      wght?: number // min: 300, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Shanti(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Share(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Share Tech(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Share Tech Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Shippori Antique(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shippori Antique B1(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shippori Mincho(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shippori Mincho B1(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Shizuru(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Shojumaru(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Short Stack(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Shrikhand(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gujarati' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Siemreap(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer'>
      
    }
  ): InSpatialFontProp
export declare function Sigmar(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sigmar One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Signika(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      GRAD?: number // min: -30, max: 0, default: 0
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Signika Negative(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Silkscreen(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Simonetta(
    options: {
      weight: '400' | '900' | Array<'400' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Single Day(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
    }
  ): InSpatialFontProp
export declare function Sintony(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sirin Stencil(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Six Caps(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sixtyfour(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      BLED?: number // min: 0, max: 100, default: 0
      SCAN?: number // min: -53, max: 100, default: 0
    }
  ): InSpatialFontProp
export declare function Sixtyfour Convergence(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols'>
      
      BLED?: number // min: 0, max: 100, default: 0
      SCAN?: number // min: -53, max: 100, default: 0
      XELA?: number // min: -100, max: 100, default: 0
      YELA?: number // min: -100, max: 100, default: 0
    }
  ): InSpatialFontProp
export declare function Skranji(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Slabo 13px(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Slabo 27px(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Slackey(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Slackside One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Smokum(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Smooch(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Smooch Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Smythe(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sniglet(
    options: {
      weight: '400' | '800' | Array<'400' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Snippet(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Snowburst One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sofadi One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sofia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sofia Sans(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Sofia Sans Condensed(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Sofia Sans Extra Condensed(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Sofia Sans Semi Condensed(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Solitreo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Solway(
    options: {
      weight: '300' | '400' | '500' | '700' | '800' | Array<'300' | '400' | '500' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sometype Mono(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Song Myung(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sono(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      MONO?: number // min: 0, max: 1, default: 1
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Sonsie One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sora(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Sorts Mill Goudy(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sour Gummy(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wdth?: number // min: 100, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Source Code Pro(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Source Sans 3(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Source Serif 4(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 8, max: 60, default: 14
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Space Grotesk(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Space Mono(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Special Elite(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Spectral(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Spectral SC(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Spicy Rice(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Spinnaker(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Spirax(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Splash(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Spline Sans(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Spline Sans Mono(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Squada One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Square Peg(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Sree Krushnadevaraya(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Sriracha(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Srisakdi(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Staatliches(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stalemate(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stalinist One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stardos Stencil(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Stick(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stick No Bills(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
      wght?: number // min: 200, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Stint Ultra Condensed(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stint Ultra Expanded(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Stoke(
    options: {
      weight: '300' | '400' | Array<'300' | '400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Strait(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Style Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Stylish(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sue Ellen Francisco(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Suez One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sulphur Point(
    options: {
      weight: '300' | '400' | '700' | Array<'300' | '400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sumana(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sunflower(
    options: {
      weight: '300' | '500' | '700' | Array<'300' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Sunshiney(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Supermercado One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Sura(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Suranna(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Suravaram(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Suwannaphum(
    options: {
      weight: '100' | '300' | '400' | '700' | '900' | Array<'100' | '300' | '400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Swanky and Moo Moo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Syncopate(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Syne(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Syne Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Syne Tactile(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tac One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Tai Heritage Pro(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tai-viet' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Tajawal(
    options: {
      weight: '200' | '300' | '400' | '500' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '500' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Tangerine(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Tapestry(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Taprom(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'khmer' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Tauri(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Taviraj(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Teachers(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'greek-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Teko(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Tektur(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Telex(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tenali Ramakrishna(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Tenor Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Text Me One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Texturina(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 12, max: 72, default: 12
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Thasadith(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function The Girl Next Door(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function The Nautigal(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Tienne(
    options: {
      weight: '400' | '700' | '900' | Array<'400' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Tillana(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | Array<'400' | '500' | '600' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tilt Neon(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      XROT?: number // min: -45, max: 45, default: 0
      YROT?: number // min: -45, max: 45, default: 0
    }
  ): InSpatialFontProp
export declare function Tilt Prism(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      XROT?: number // min: -45, max: 45, default: 0
      YROT?: number // min: -45, max: 45, default: 0
    }
  ): InSpatialFontProp
export declare function Tilt Warp(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      XROT?: number // min: -45, max: 45, default: 0
      YROT?: number // min: -45, max: 45, default: 0
    }
  ): InSpatialFontProp
export declare function Timmana(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Tinos(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Tiny5(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Bangla(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'bengali' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Devanagari Hindi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Devanagari Marathi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Devanagari Sanskrit(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Gurmukhi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'gurmukhi' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Kannada(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'kannada' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Tamil(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'tamil'>
      
    }
  ): InSpatialFontProp
export declare function Tiro Telugu(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'telugu'>
      
    }
  ): InSpatialFontProp
export declare function Titan One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Titillium Web(
    options: {
      weight: '200' | '300' | '400' | '600' | '700' | '900' | Array<'200' | '300' | '400' | '600' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tomorrow(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tourney(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Trade Winds(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Train One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Trirong(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'thai' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Trispace(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Trocchi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Trochut(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Truculenta(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      opsz?: number // min: 12, max: 72, default: 14
      wdth?: number // min: 75, max: 125, default: 100
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Trykker(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tsukimi Rounded(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Tulpen One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Turret Road(
    options: {
      weight: '200' | '300' | '400' | '500' | '700' | '800' | Array<'200' | '300' | '400' | '500' | '700' | '800'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Twinkle Star(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Ubuntu(
    options: {
      weight: '300' | '400' | '500' | '700' | Array<'300' | '400' | '500' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ubuntu Condensed(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ubuntu Mono(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Ubuntu Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
      wdth?: number // min: 75, max: 100, default: 100
      wght?: number // min: 100, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Ubuntu Sans Mono(
    options: {
      weight: '400' | '500' | '600' | '700' | 'variable' | Array<'400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'greek-ext' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Uchen(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'tibetan'>
      
    }
  ): InSpatialFontProp
export declare function Ultra(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Unbounded(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 200, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Uncial Antiqua(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Underdog(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Unica One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function UnifrakturCook(
    options: {
      weight: '700' | Array<'700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function UnifrakturMaguntia(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Unkempt(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Unlock(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Unna(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Updock(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Urbanist(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function VT323(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Vampiro One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Varela(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Varela Round(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'hebrew' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Varta(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Vast Shadow(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Vazirmatn(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin' | 'latin-ext'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Vesper Libre(
    options: {
      weight: '400' | '500' | '700' | '900' | Array<'400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Viaoda Libre(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Vibes(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Vibur(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Victor Mono(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Vidaloka(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Viga(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Vina Sans(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Voces(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Volkhov(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Vollkorn(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Vollkorn SC(
    options: {
      weight: '400' | '600' | '700' | '900' | Array<'400' | '600' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Voltaire(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Vujahday Script(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Waiting for the Sunrise(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Wallpoet(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Walter Turncoat(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Warnes(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Water Brush(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Waterfall(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Wavefont(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<>
      
      ROND?: number // min: 0, max: 100, default: 100
      YELA?: number // min: -100, max: 100, default: -100
      wght?: number // min: 4, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Wellfleet(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Wendy One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Whisper(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function WindSong(
    options: {
      weight: '400' | '500' | Array<'400' | '500'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Wire One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Wittgenstein(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
      wght?: number // min: 400, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Wix Madefor Display(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Wix Madefor Text(
    options: {
      weight: '400' | '500' | '600' | '700' | '800' | 'variable' | Array<'400' | '500' | '600' | '700' | '800' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 400, max: 800, default: 400
    }
  ): InSpatialFontProp
export declare function Work Sans(
    options: {
      weight: '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable' | Array<'100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 100, max: 900, default: 400
    }
  ): InSpatialFontProp
export declare function Workbench(
    options: {
      weight: '400' | 'variable' | Array<'400' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'math' | 'symbols'>
      
      BLED?: number // min: 0, max: 100, default: 0
      SCAN?: number // min: -53, max: 100, default: 0
    }
  ): InSpatialFontProp
export declare function Xanh Mono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Yaldevi(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'sinhala'>
      
      wght?: number // min: 200, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Yanone Kaffeesatz(
    options: {
      weight: '200' | '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'200' | '300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 200, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Yantramanav(
    options: {
      weight: '100' | '300' | '400' | '500' | '700' | '900' | Array<'100' | '300' | '400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yarndings 12(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Yarndings 12 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Yarndings 20(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Yarndings 20 Charted(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'math' | 'symbols'>
      
    }
  ): InSpatialFontProp
export declare function Yatra One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'devanagari' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yellowtail(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yeon Sung(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Yeseva One(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Yesteryear(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yomogi(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext' | 'vietnamese'>
      
    }
  ): InSpatialFontProp
export declare function Young Serif(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yrsa(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | 'variable' | Array<'300' | '400' | '500' | '600' | '700' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext' | 'vietnamese'>
      
      wght?: number // min: 300, max: 700, default: 400
    }
  ): InSpatialFontProp
export declare function Ysabeau(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Ysabeau Infant(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Ysabeau Office(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Ysabeau SC(
    options: {
      weight: '1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable' | Array<'1' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '1000' | 'variable'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'cyrillic-ext' | 'greek' | 'latin' | 'latin-ext' | 'math' | 'symbols' | 'vietnamese'>
      
      wght?: number // min: 1, max: 1000, default: 400
    }
  ): InSpatialFontProp
export declare function Yuji Boku(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yuji Hentaigana Akari(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yuji Hentaigana Akebono(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yuji Mai(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yuji Syuku(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Yusei Magic(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function ZCOOL KuaiLe(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function ZCOOL QingKe HuangYou(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function ZCOOL XiaoWei(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Zain(
    options: {
      weight: '200' | '300' | '400' | '700' | '800' | '900' | Array<'200' | '300' | '400' | '700' | '800' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'arabic' | 'latin'>
      
    }
  ): InSpatialFontProp
export declare function Zen Antique(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Antique Soft(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Dots(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Kaku Gothic Antique(
    options: {
      weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Kaku Gothic New(
    options: {
      weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Kurenaido(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Loop(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Maru Gothic(
    options: {
      weight: '300' | '400' | '500' | '700' | '900' | Array<'300' | '400' | '500' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Old Mincho(
    options: {
      weight: '400' | '500' | '600' | '700' | '900' | Array<'400' | '500' | '600' | '700' | '900'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'cyrillic' | 'greek' | 'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zen Tokyo Zoo(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zeyada(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zhi Mang Xing(
    options: {
      weight: '400' | Array<'400'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin'>
      
    }
  ): InSpatialFontProp
export declare function Zilla Slab(
    options: {
      weight: '300' | '400' | '500' | '600' | '700' | Array<'300' | '400' | '500' | '600' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
export declare function Zilla Slab Highlight(
    options: {
      weight: '400' | '700' | Array<'400' | '700'>
      style?:  | Array<>
      display?: Display
      variable?: string
      preload?: boolean
      fallback?: string[]
      adjustFontFallback?: boolean
      subsets?: Array<'latin' | 'latin-ext'>
      
    }
  ): InSpatialFontProp
