{
  "scriptId": "339",
  "url": "file:///C:/Studio/inspatial-core/packages/core/dev/test/src/assert.ts",
  "functions": [
    {
      "functionName": "",
      "ranges": [{ "startOffset": 0, "endOffset": 68218, "count": 1 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "AssertionError",
      "ranges": [{ "startOffset": 5461, "endOffset": 5558, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assert",
      "ranges": [{ "startOffset": 6718, "endOffset": 6807, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "isKeyedCollection",
      "ranges": [{ "startOffset": 6808, "endOffset": 6888, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "prototypesEqual",
      "ranges": [{ "startOffset": 6889, "endOffset": 7105, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "isBasicObjectOrArray",
      "ranges": [{ "startOffset": 7106, "endOffset": 7272, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "ownKeys",
      "ranges": [{ "startOffset": 7356, "endOffset": 7478, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "getKeysDeep",
      "ranges": [{ "startOffset": 7479, "endOffset": 7732, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "get",
      "ranges": [{ "startOffset": 7832, "endOffset": 7838, "count": 8 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [{ "startOffset": 8246, "endOffset": 8260, "count": 12 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "",
      "ranges": [{ "startOffset": 8266, "endOffset": 8282, "count": 4 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "isPrimitive",
      "ranges": [{ "startOffset": 8286, "endOffset": 8459, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "compareTypedArrays",
      "ranges": [{ "startOffset": 8514, "endOffset": 8700, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "sameValueZero",
      "ranges": [{ "startOffset": 8778, "endOffset": 8847, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertEqual",
      "ranges": [{ "startOffset": 10099, "endOffset": 12830, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertEquals",
      "ranges": [{ "startOffset": 14284, "endOffset": 14929, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertIsError",
      "ranges": [{ "startOffset": 16893, "endOffset": 17873, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertMatch",
      "ranges": [{ "startOffset": 19491, "endOffset": 19728, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotEquals",
      "ranges": [{ "startOffset": 21007, "endOffset": 21345, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertExists",
      "ranges": [{ "startOffset": 22787, "endOffset": 23041, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertFalse",
      "ranges": [{ "startOffset": 24154, "endOffset": 24247, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotStrictEquals",
      "ranges": [{ "startOffset": 25439, "endOffset": 25704, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertObjectMatch",
      "ranges": [{ "startOffset": 27321, "endOffset": 27712, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "isObject",
      "ranges": [{ "startOffset": 27713, "endOffset": 27789, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "filter",
      "ranges": [{ "startOffset": 27790, "endOffset": 32221, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertStrictEquals",
      "ranges": [{ "startOffset": 34022, "endOffset": 34926, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertAlmostEquals",
      "ranges": [{ "startOffset": 36559, "endOffset": 37146, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertArrayIncludes",
      "ranges": [{ "startOffset": 38535, "endOffset": 39130, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertGreater",
      "ranges": [{ "startOffset": 40576, "endOffset": 40821, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertGreaterOrEqual",
      "ranges": [{ "startOffset": 42251, "endOffset": 42505, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertInstanceOf",
      "ranges": [{ "startOffset": 43861, "endOffset": 44801, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertLess",
      "ranges": [{ "startOffset": 45211, "endOffset": 45453, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertLessOrEqual",
      "ranges": [{ "startOffset": 46853, "endOffset": 47104, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotInstanceOf",
      "ranges": [{ "startOffset": 48536, "endOffset": 48822, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertNotMatch",
      "ranges": [{ "startOffset": 49926, "endOffset": 50171, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertRejects",
      "ranges": [{ "startOffset": 51911, "endOffset": 53248, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertStringIncludes",
      "ranges": [{ "startOffset": 54579, "endOffset": 54831, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertThrows",
      "ranges": [{ "startOffset": 54839, "endOffset": 55836, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertFail",
      "ranges": [{ "startOffset": 56831, "endOffset": 56963, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertUnimplemented",
      "ranges": [{ "startOffset": 58076, "endOffset": 58214, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertUnreachable",
      "ranges": [{ "startOffset": 59328, "endOffset": 59462, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "unescapeHTML",
      "ranges": [{ "startOffset": 59628, "endOffset": 59788, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "compareHTML",
      "ranges": [{ "startOffset": 59857, "endOffset": 60360, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "assertHTMLEquals",
      "ranges": [{ "startOffset": 61736, "endOffset": 61955, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "<instance_members_initializer>",
      "ranges": [{ "startOffset": 62776, "endOffset": 62782, "count": 1 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "AssertionState",
      "ranges": [{ "startOffset": 62786, "endOffset": 62959, "count": 1 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "get assertionCount",
      "ranges": [{ "startOffset": 63323, "endOffset": 63388, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "get assertionTriggeredCount",
      "ranges": [{ "startOffset": 63768, "endOffset": 63851, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "setAssertionCheck",
      "ranges": [{ "startOffset": 64248, "endOffset": 64314, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "setAssertionTriggered",
      "ranges": [{ "startOffset": 64710, "endOffset": 64784, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "setAssertionCount",
      "ranges": [{ "startOffset": 65290, "endOffset": 65356, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "updateAssertionTriggerCount",
      "ranges": [{ "startOffset": 65697, "endOffset": 65838, "count": 0 }],
      "isBlockCoverage": false
    },
    {
      "functionName": "checkAssertionErrorState",
      "ranges": [
        { "startOffset": 66434, "endOffset": 66540, "count": 105 },
        { "startOffset": 66501, "endOffset": 66535, "count": 0 }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "resetAssertionState",
      "ranges": [{ "startOffset": 66853, "endOffset": 67035, "count": 105 }],
      "isBlockCoverage": true
    },
    {
      "functionName": "checkAssertionCountSatisfied",
      "ranges": [
        { "startOffset": 67652, "endOffset": 67811, "count": 105 },
        { "startOffset": 67737, "endOffset": 67806, "count": 0 }
      ],
      "isBlockCoverage": true
    },
    {
      "functionName": "getAssertionState",
      "ranges": [{ "startOffset": 68160, "endOffset": 68217, "count": 36 }],
      "isBlockCoverage": true
    }
  ]
}
